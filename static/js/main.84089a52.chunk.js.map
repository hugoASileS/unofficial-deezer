{"version":3,"sources":["reportWebVitals.js","pages/NotFoundPage/NotFoundPage.js","pages/HomePage/HomePage.js","redux/ducks/artistsDucks.js","components/Track/Track.js","components/Track/TracksList.js","pages/AlbumsPage/components/AlbumCover.js","components/Loading/Loading.js","pages/AlbumsPage/AlbumsPage.js","redux/ducks/albumsDucks.js","pages/ArtistsPage/components/ArtistCover.js","pages/AlbumsPage/AlbumDetailPage.js","pages/ArtistsPage/ArtistsPage.js","pages/ArtistsPage/ArtistsDetailPage.js","pages/GenresPage/GenresDetailPage.js","routers/AppRouter.js","redux/ducks/playerDucks.js","redux/rootReducer.js","redux/rootStore.js","redux/sagas/albumsSaga.js","redux/sagas/artistsSaga.js","redux/rootSagas.js","components/Header/Header.js","components/Sidebar/components/Browse.js","components/Sidebar/components/Queue.js","components/Sidebar/Sidebar.js","components/MainPlayer/MainPlayer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotFoundPage","to","HomePage","SET_ARTISTS","GET_ARTIST_TRACKS","SET_ARTIST_TRACKS","SELECT_ARTIST","setTracks","tracks","type","selectArtist","artist","initialStateArtists","data","total","selected","Track","track","index","title","className","name","duration","TracksList","length","map","id","propTypes","album","PropTypes","object","cover","showArtist","bool","AlbumCover","match","dispatch","useDispatch","Col","url","src","cover_medium","alt","onClick","genres","genre","Badge","variant","Loading","Spinner","animation","role","AlbumsPage","albums","useSelector","state","Row","GET_ALBUM","SET_ALBUM","SET_ALBUMS","GET_ALBUMS","setAlbums","initialStateAlbums","ArtistCover","Image","picture_medium","height","width","AlbumDetailPage","albumId","useParams","useEffect","getAlbum","ArtistsPage","artists","ArtistsDetailPage","artistId","getArtist","GenresDetailPage","AppRouter","exact","path","component","SET_PLAYLIST","initialStatePlayer","rootReducer","combineReducers","action","players","playlist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","getAlbums","getAsyncAlbums","fetch","response","json","call","put","playlists","all","takeLatest","getAsyncArtists","fetchArtist","rootSaga","fork","Header","data-testid","Navbar","bg","Brand","href","Form","inline","FormControl","placeholder","Button","StyledNavLink","styled","NavLink","Browse","Nav","defaultActiveKey","Link","as","Sidebar","useState","tabActive","setTabActive","Queue","MainPlayer","App","store","loggerMiddleware","createLogger","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","generateStore","basename","Container","fluid","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84089a52.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst HomePage = () => <div>Este es el home</div>;\n\nexport default HomePage;\n","export const GET_ARTISTS = '[Artists] get artists';\nexport const SET_ARTISTS = '[Artists] set artists';\nexport const GET_ARTIST_TRACKS = '[Artists] get artist tracks by artistId';\nexport const SET_ARTIST_TRACKS = '[Artists] set tracks artist';\nexport const SELECT_ARTIST = '[Artists] select artist';\n\nexport function setArtists(artists) {\n  return {\n    type: SET_ARTISTS,\n    artists,\n  };\n}\nexport function getArtists() {\n  return {\n    type: GET_ARTISTS,\n  };\n}\n\nexport function setTracks(tracks) {\n  return {\n    type: SET_ARTIST_TRACKS,\n    tracks,\n  };\n}\n\nexport function getArtist(artistId) {\n  return {\n    type: GET_ARTIST_TRACKS,\n    artistId,\n  };\n}\n\nexport function selectArtist(artist) {\n  return {\n    type: SELECT_ARTIST,\n    artist,\n  };\n}\n\nconst initialStateArtists = {\n  data: [],\n  total: 0,\n  selected: {},\n};\n\nexport function artistsReducer(state = initialStateArtists, action) {\n  switch (action.type) {\n    case SET_ARTISTS:\n      return {\n        ...state,\n        ...action.artists,\n      };\n    case SET_ARTIST_TRACKS:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          tracks: action.tracks,\n        },\n      };\n    case SELECT_ARTIST:\n      return {\n        ...state,\n        selected: {\n          ...state.artist,\n          ...action.artist,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\n\nconst Track = ({ track, index }) => {\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>{index + 1}</td>\n          <td>\n            <b>{track.title}</b>\n          </td>\n          <td className=\"text-black-50\">{track.artist.name}</td>\n          <td>{track.duration}</td>\n          <td>\n            <span>play</span>\n            {/*<span onClick={() => dispatch(setCurrentTrack())}>play</span>*/}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Track;\n","import React from 'react';\nimport Track from './Track';\nimport PropTypes from 'prop-types';\n\nconst TracksList = ({ tracks }) => {\n  if (tracks.length === 0) {\n    return <div>No hay canciones</div>;\n  }\n  return tracks.map((track, index) => {\n    return (\n      <table key={track.id}>\n        <tbody>\n          <Track index={index} track={track} />\n        </tbody>\n      </table>\n    );\n  });\n};\n\nTracksList.propTypes = {\n  tracks: PropTypes.array,\n};\n\nexport default TracksList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../../redux/ducks/artistsDucks';\nimport { useDispatch } from 'react-redux';\nimport { Badge, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport TracksList from '../../../components/Track/TracksList';\n\nconst AlbumCover = ({ album, match, showArtist = true }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Col>\n      <Link to={`${match.url}/${album.id}`}>\n        <img src={album.cover_medium} alt=\"album cover\" />\n      </Link>\n      <dl>\n        <dt>Album</dt>\n        <dd>\n          <Link to={`${match.url}/${album.id}`}>{album.title}</Link>\n        </dd>\n        {showArtist && (\n          <>\n            <dt>Artista</dt>\n            <dd>\n              <Link to={`artists/${album.artist.id}`} onClick={() => dispatch(selectArtist(album.artist))}>\n                {album.artist.name}\n              </Link>\n            </dd>\n          </>\n        )}\n        {album.genres &&\n          album.genres.data.map((genre) => {\n            return (\n              <Link to={`/genres/${genre.id}`} key={genre.id}>\n                <Badge variant=\"info\">{genre.name}</Badge>\n              </Link>\n            );\n          })}\n      </dl>\n    </Col>\n  );\n};\n\nTracksList.propTypes = {\n  album: PropTypes.object,\n  cover: PropTypes.object,\n  showArtist: PropTypes.bool,\n};\nexport default AlbumCover;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = () => (\n  <Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </Spinner>\n);\n\nexport default Loading;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AlbumCover from './components/AlbumCover';\nimport { Loading } from '../../components/Loading';\nimport { Row } from 'react-bootstrap';\n\nconst AlbumsPage = ({ match }) => {\n  const albums = useSelector((state) => state.albums);\n  if (!albums) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <h2>Albums</h2>\n      <Row>{albums.data && albums.data.map((album) => <AlbumCover key={album.id} album={album} match={match} />)}</Row>\n    </div>\n  );\n};\n\nexport default AlbumsPage;\n","export const GET_ALBUM = '[Albums] get album by id';\nexport const SET_ALBUM = '[Albums] set album';\nexport const SET_ALBUMS = '[Albums] set albums';\nexport const GET_ALBUMS = '[Albums] get albums';\n\nexport function setAlbums(albums) {\n  return {\n    type: SET_ALBUMS,\n    albums,\n  };\n}\nexport function getAlbums() {\n  return {\n    type: GET_ALBUMS,\n  };\n}\nexport function setAlbum(album) {\n  return {\n    type: SET_ALBUM,\n    album,\n  };\n}\nexport function getAlbum(albumId) {\n  return {\n    type: GET_ALBUM,\n    albumId,\n  };\n}\n\nconst initialStateAlbums = {\n  data: [],\n  total: 0,\n};\n\nexport function albumsReducer(state = initialStateAlbums, action) {\n  switch (action.type) {\n    case SET_ALBUMS:\n      return {\n        ...state,\n        ...action.albums,\n      };\n    case SET_ALBUM:\n      return {\n        ...state,\n        album: action.album,\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../../redux/ducks/artistsDucks';\nimport { useDispatch } from 'react-redux';\nimport { Col, Image } from 'react-bootstrap';\n\nconst ArtistCover = ({ artist }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Col key={artist.id}>\n      <Link to={`/artists/${artist.id}`} onClick={() => dispatch(selectArtist(artist))}>\n        <Image src={artist.picture_medium} height={250} width={250} />\n      </Link>\n      <dl>\n        <dt>Artista</dt>\n        <dd>\n          <Link to={`/artists/${artist.id}`} onClick={() => dispatch(selectArtist(artist))}>\n            {artist.name}\n          </Link>\n        </dd>\n      </dl>\n    </Col>\n  );\n};\n\nexport default ArtistCover;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbum } from '../../redux/ducks/albumsDucks';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { TracksList } from '../../components/Track';\nimport { selectArtist } from '../../redux/ducks/artistsDucks';\nimport { Loading } from '../../components/Loading';\nimport { Badge, Row } from 'react-bootstrap';\nimport AlbumCover from './components/AlbumCover';\nimport ArtistCover from '../ArtistsPage/components/ArtistCover';\n\nconst AlbumDetailPage = ({ match }) => {\n  const dispatch = useDispatch();\n  const { albumId } = useParams();\n  const album = useSelector((state) => state.albums.album);\n\n  useEffect(() => {\n    dispatch(getAlbum(albumId));\n  }, [dispatch, albumId]);\n\n  if (!album) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <Row>\n        <AlbumCover album={album} match={match} showArtist={false} />\n        <ArtistCover artist={album.artist} />\n      </Row>\n      <TracksList tracks={album.tracks.data} />\n    </div>\n  );\n};\n\nexport default AlbumDetailPage;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../redux/ducks/artistsDucks';\nimport { Col, Container, Image, Row } from 'react-bootstrap';\nimport { Loading } from '../../components/Loading';\nimport ArtistCover from './components/ArtistCover';\n\nconst ArtistsPage = () => {\n  const artists = useSelector((state) => state.artists);\n  const dispatch = useDispatch();\n\n  if (!artists) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <h2>Artistas</h2>\n      <Row>{artists.data && artists.data.map((artist) => <ArtistCover key={artist.id} artist={artist} />)}</Row>\n    </div>\n  );\n};\n\nexport default ArtistsPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { TracksList } from '../../components/Track';\nimport { getArtist } from '../../redux/ducks/artistsDucks';\nimport { Loading } from '../../components/Loading';\nimport { Image } from 'react-bootstrap';\nimport ArtistCover from './components/ArtistCover';\n\nconst ArtistsDetailPage = ({ match }) => {\n  const dispatch = useDispatch();\n  const { artistId } = useParams();\n  const artist = useSelector((state) => state.artists.selected);\n\n  useEffect(() => {\n    dispatch(getArtist(artistId));\n  }, [dispatch, artistId]);\n\n  if (!artist) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <ArtistCover key={artist.id} artist={artist} />\n      {artist.tracks ? <TracksList tracks={artist.tracks.data} /> : <Loading />}\n    </>\n  );\n};\n\nexport default ArtistsDetailPage;\n","import React from 'react';\n/*\nimport { useSelector } from 'react-redux';\n*/\n\nconst GenresDetailPage = () => {\n  /*const playlist = useSelector((state) => state.playlist);*/\n\n  return (\n    <div>\n      <h2>Generos</h2>\n      {/*{playlist && playlist.data &&\n      playlist.data.map((album) => (\n        <div key={album.id}>\n          {album.title}\n        </div>\n      ))}*/}\n    </div>\n  );\n};\n\nexport default GenresDetailPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotFoundPage from '../pages/NotFoundPage';\nimport HomePage from '../pages/HomePage';\nimport { AlbumDetailPage, AlbumsPage } from '../pages/AlbumsPage';\nimport { ArtistsDetailPage, ArtistsPage } from '../pages/ArtistsPage';\nimport GenresDetailPage from '../pages/GenresPage';\nimport { useDispatch } from 'react-redux';\nimport { getAlbums } from '../redux/ducks/albumsDucks';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAlbums());\n  }, [dispatch]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/albums\" component={AlbumsPage} />\n      <Route exact path=\"/albums/:albumId\" component={AlbumDetailPage} />\n      <Route exact path=\"/artists\" component={ArtistsPage} />\n      <Route exact path=\"/artists/:artistId\" component={ArtistsDetailPage} />\n      <Route exact path=\"/genres/:genreId\" component={GenresDetailPage} />\n      <Route exact component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","const SET_PLAYLIST = '[Player] set playlist';\n\nexport function setPlaylist(playlist) {\n  return {\n    type: SET_PLAYLIST,\n    playlist,\n  };\n}\n\nconst initialStatePlayer = {\n  data: [],\n  total: 0,\n};\n\nexport function playerReducer(state = initialStatePlayer, action) {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      return {\n        ...state,\n        playlist: action.playlist,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { playerReducer } from './ducks/playerDucks';\nimport { albumsReducer } from './ducks/albumsDucks';\nimport { artistsReducer } from './ducks/artistsDucks';\n\nconst rootReducer = combineReducers({\n  albums: albumsReducer,\n  players: playerReducer,\n  artists: artistsReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from './rootReducer';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const generateStore = () => {\n  const loggerMiddleware = createLogger();\n  const sagaMiddleware = createSagaMiddleware();\n\n  return {\n    ...createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware, sagaMiddleware))),\n    runSaga: sagaMiddleware.run,\n  };\n};\n","import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport { GET_ALBUM, GET_ALBUMS, setAlbum, setAlbums } from '../ducks/albumsDucks';\nimport { setPlaylist } from '../ducks/playerDucks';\nimport { setArtists } from '../ducks/artistsDucks';\n\nfunction albums() {\n  return fetch('https://cors-anywhere.herokuapp.com/https://api.deezer.com/chart/top?limit=50').then((response) =>\n    response.json()\n  );\n}\nfunction album(albumId) {\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${albumId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function* getAlbums() {\n  try {\n    const data = yield call(albums);\n    yield put(setAlbums(data.albums));\n    yield put(setArtists(data.artists));\n    yield put(\n      setPlaylist(data.playlists)\n    ); /*\n    yield put(setPodcasts(data.podcasts));\n    yield put(setTracks(data.tracks));*/\n  } catch (e) {\n    yield put(setAlbums(e));\n  }\n}\n\nexport function* getAlbum({ albumId }) {\n  try {\n    const data = yield call(album, albumId);\n    yield put(setAlbum(data));\n  } catch (e) {\n    yield put(setAlbums(e));\n  }\n}\n\nexport default function* getAsyncAlbums() {\n  try {\n    yield all([yield takeLatest(GET_ALBUMS, getAlbums), yield takeLatest(GET_ALBUM, getAlbum)]);\n  } catch (e) {}\n}\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { GET_ARTIST_TRACKS, setTracks } from '../ducks/artistsDucks';\n\nfunction fetchArtist(artistId) {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/https://api.deezer.com/artist/${artistId}/top?limit=50`\n  ).then((response) => response.json());\n}\n\nexport function* getArtist({ artistId }) {\n  try {\n    const data = yield call(fetchArtist, artistId);\n    yield put(setTracks(data));\n  } catch (e) {\n    yield put(setTracks(e));\n  }\n}\n\nexport default function* getAsyncArtists() {\n  yield takeLatest(GET_ARTIST_TRACKS, getArtist);\n}\n","import { fork } from '@redux-saga/core/effects';\nimport getAsyncAlbums from './sagas/albumsSaga';\nimport getAsyncArtists from './sagas/artistsSaga';\n\nexport default function* rootSaga() {\n  yield fork(getAsyncAlbums);\n  yield fork(getAsyncArtists);\n}\n","import React from 'react';\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\n\nconst Header = () => (\n  <header data-testid=\"header\">\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"#home\" className=\"mr-auto\">\n        Unofficial Deezer\n      </Navbar.Brand>\n      <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-primary\">Search</Button>\n      </Form>\n    </Navbar>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  &.active {\n    color: black;\n  }\n`;\n\nconst Browse = () => (\n  <Nav defaultActiveKey=\"/\" className=\"flex-column\">\n    <Nav.Link as={StyledNavLink} to=\"/\" exact>\n      Home\n    </Nav.Link>\n    <Nav.Link as={StyledNavLink} to=\"/albums\" exact>\n      Albums\n    </Nav.Link>\n    <Nav.Link as={StyledNavLink} to=\"/artists\" exact>\n      Artistas\n    </Nav.Link>\n  </Nav>\n);\n\nexport default Browse;\n","import React from 'react';\n\nconst Sidebar = () => {\n  return <div>aqui va la lista</div>;\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Browse from './components/Browse';\nimport Queue from './components/Queue';\n\nconst Sidebar = () => {\n  const [tabActive, setTabActive] = useState('browse');\n\n  return (\n    <aside data-testid=\"sidebar\">\n      <Button variant=\"secondary\" onClick={() => setTabActive('browse')}>\n        Browse\n      </Button>\n      <Button variant=\"secondary\" onClick={() => setTabActive('queue')}>\n        Queue\n      </Button>\n      {tabActive === 'browse' && <Browse />}\n      {tabActive === 'queue' && <Queue />}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst MainPlayer = () => {\n  const playlist = useSelector((state) => state.players);\n\n  return (\n    <footer data-testid=\"player\" className=\"fixed-bottom\">\n      Main player\n    </footer>\n  );\n};\n\nexport default MainPlayer;\n","import './App.css';\nimport AppRouter from './routers/AppRouter';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { generateStore } from './redux/rootStore';\nimport rootSaga from './redux/rootSagas';\nimport Header from './components/Header/Header';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Sidebar from './components/Sidebar';\nimport MainPlayer from './components/MainPlayer';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  const store = generateStore();\n\n  store.runSaga(rootSaga);\n\n  return (\n    <Provider store={store}>\n      <Router basename=\"unofficial-deezer\">\n        <Header />\n        <Container fluid>\n          <Row>\n            <Col xs={3}>\n              <Sidebar />\n            </Col>\n            <Col>\n              <AppRouter />\n            </Col>\n          </Row>\n          <Row>\n            <MainPlayer />\n          </Row>\n        </Container>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}