{"version":3,"sources":["reportWebVitals.js","pages/NotFoundPage/NotFoundPage.js","pages/HomePage/HomePage.js","redux/ducks/artistsDucks.js","redux/ducks/playerDucks.js","components/Track/Track.js","components/Track/component/Styled.js","components/Track/TracksList.js","pages/AlbumsPage/components/AlbumCover.js","components/Loading/Loading.js","pages/AlbumsPage/AlbumsPage.js","redux/ducks/albumsDucks.js","pages/ArtistsPage/components/ArtistCover.js","pages/AlbumsPage/AlbumDetailPage.js","pages/ArtistsPage/ArtistsPage.js","pages/ArtistsPage/ArtistsDetailPage.js","pages/GenresPage/GenresDetailPage.js","routers/AppRouter.js","redux/rootReducer.js","redux/rootStore.js","redux/sagas/albumsSaga.js","redux/sagas/artistsSaga.js","redux/rootSagas.js","components/Header/Header.js","components/Sidebar/components/Browse.js","components/Sidebar/components/Queue.js","components/Sidebar/Sidebar.js","components/MainPlayer/MainPlayer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotFoundPage","to","HomePage","SET_ARTISTS","GET_ARTIST_TRACKS","SET_ARTIST_TRACKS","SELECT_ARTIST","setTracks","tracks","type","selectArtist","artist","initialStateArtists","data","total","selected","SET_PLAYLIST","NEXT_TRACK","setPlaylist","payload","initialStatePlayer","current","undefined","Track","track","index","dispatch","useDispatch","currentTrack","useSelector","state","players","title","className","name","duration","id","Button","variant","onClick","StyledTable","styled","table","TracksList","length","map","propTypes","album","PropTypes","object","showArtist","bool","AlbumCover","Col","src","cover_medium","alt","genres","genre","Badge","Loading","Spinner","animation","role","AlbumsPage","match","albums","Row","GET_ALBUM","SET_ALBUM","SET_ALBUMS","GET_ALBUMS","setAlbums","initialStateAlbums","ArtistCover","Image","picture_medium","height","width","AlbumDetailPage","albumId","useParams","useEffect","getAlbum","ArtistsPage","artists","ArtistsDetailPage","artistId","getArtist","GenresDetailPage","AppRouter","exact","path","component","rootReducer","combineReducers","action","next","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","getAlbums","getAsyncAlbums","fetch","response","json","call","put","all","takeLatest","getAsyncArtists","fetchArtist","rootSaga","fork","Header","data-testid","Navbar","bg","Brand","href","StyledNavLink","NavLink","Browse","Nav","defaultActiveKey","Link","as","Sidebar","queue","useState","tabActive","setTabActive","Queue","MainPlayer","audioRef","useRef","pause","load","controls","ref","autoPlay","onEnded","preview","App","store","loggerMiddleware","createLogger","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","generateStore","basename","Container","fluid","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf380b6e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst HomePage = () => <div>Este sera el home próximamente</div>;\n\nexport default HomePage;\n","export const GET_ARTISTS = '[Artists] get artists';\nexport const SET_ARTISTS = '[Artists] set artists';\nexport const GET_ARTIST_TRACKS = '[Artists] get artist tracks by artistId';\nexport const SET_ARTIST_TRACKS = '[Artists] set tracks artist';\nexport const SELECT_ARTIST = '[Artists] select artist';\n\nexport function setArtists(artists) {\n  return {\n    type: SET_ARTISTS,\n    artists,\n  };\n}\nexport function getArtists() {\n  return {\n    type: GET_ARTISTS,\n  };\n}\n\nexport function setTracks(tracks) {\n  return {\n    type: SET_ARTIST_TRACKS,\n    tracks,\n  };\n}\n\nexport function getArtist(artistId) {\n  return {\n    type: GET_ARTIST_TRACKS,\n    artistId,\n  };\n}\n\nexport function selectArtist(artist) {\n  return {\n    type: SELECT_ARTIST,\n    artist,\n  };\n}\n\nconst initialStateArtists = {\n  data: [],\n  total: 0,\n  selected: {},\n};\n\nexport function artistsReducer(state = initialStateArtists, action) {\n  switch (action.type) {\n    case SET_ARTISTS:\n      return {\n        ...state,\n        ...action.artists,\n      };\n    case SET_ARTIST_TRACKS:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          tracks: action.tracks,\n        },\n      };\n    case SELECT_ARTIST:\n      return {\n        ...state,\n        selected: {\n          ...state.artist,\n          ...action.artist,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","const SET_PLAYLIST = '[Player] set playlist';\nconst NEXT_TRACK = '[Player] next track';\n\nexport function setPlaylist(payload) {\n  return {\n    type: SET_PLAYLIST,\n    payload,\n  };\n}\n\nexport function nextTrack() {\n  return {\n    type: NEXT_TRACK,\n  };\n}\n\nconst initialStatePlayer = {\n  tracks: [],\n  current: undefined,\n};\n\nexport function playerReducer(state = initialStatePlayer, action) {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      const { tracks, track: current } = action.payload;\n      return {\n        ...state,\n        tracks,\n        current,\n      };\n    case NEXT_TRACK:\n      let next = state.current;\n      if (state.tracks.length > state.current.index + 1) {\n        next = { ...state.tracks[state.current.index + 1], index: state.current.index + 1 };\n      }\n\n      return {\n        ...state,\n        current: next,\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { setPlaylist } from '../../redux/ducks/playerDucks';\nimport PropTypes from 'prop-types';\n\nconst Track = ({ track, index, tracks }) => {\n  const dispatch = useDispatch();\n  const currentTrack = useSelector((state) => state.players.current);\n\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>\n        <b>{track.title}</b>\n      </td>\n      <td className=\"text-black-50\">{track.artist.name}</td>\n      <td>{track.duration}</td>\n      <td>\n        {currentTrack && currentTrack.id === track.id ? (\n          <Button variant=\"outline-warning\">pausa</Button>\n        ) : (\n          <Button\n            variant=\"outline-success\"\n            onClick={() => dispatch(setPlaylist({ track: { ...track, index }, tracks }))}\n          >\n            play\n          </Button>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nTrack.propTypes = {\n  track: PropTypes.object,\n  index: PropTypes.number,\n  tracks: PropTypes.array,\n};\n\nexport default Track;\n","import styled from 'styled-components';\n\nexport const StyledTable = styled.table`\n  width: 100%;\n`;\n","import React from 'react';\nimport Track from './Track';\nimport PropTypes from 'prop-types';\nimport { StyledTable } from './component/Styled';\n\nconst TracksList = ({ tracks }) => {\n  if (tracks.length === 0) {\n    return <div>No hay canciones</div>;\n  }\n  return (\n    <StyledTable>\n      <tbody>\n        {tracks.map((track, index) => {\n          return <Track index={index} track={track} key={track.id} tracks={tracks} />;\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nTracksList.propTypes = {\n  tracks: PropTypes.array,\n};\n\nexport default TracksList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../../redux/ducks/artistsDucks';\nimport { useDispatch } from 'react-redux';\nimport { Badge, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport TracksList from '../../../components/Track/TracksList';\n\nconst AlbumCover = ({ album, showArtist = true }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Col>\n      <Link to={`/albums/${album.id}`}>\n        <img src={album.cover_medium} alt=\"album cover\" />\n      </Link>\n      <dl>\n        <dt>Album</dt>\n        <dd>\n          <Link to={`/albums/${album.id}`}>{album.title}</Link>\n        </dd>\n        {showArtist && (\n          <>\n            <dt>Artista</dt>\n            <dd>\n              <Link to={`/artists/${album.artist.id}`} onClick={() => dispatch(selectArtist(album.artist))}>\n                {album.artist.name}\n              </Link>\n            </dd>\n          </>\n        )}\n        {album.genres &&\n          album.genres.data.map((genre) => {\n            return (\n              <Link to={`/genres/${genre.id}`} key={genre.id}>\n                <Badge variant=\"info\">{genre.name}</Badge>\n              </Link>\n            );\n          })}\n      </dl>\n    </Col>\n  );\n};\n\nTracksList.propTypes = {\n  album: PropTypes.object,\n  showArtist: PropTypes.bool,\n};\nexport default AlbumCover;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = () => (\n  <Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </Spinner>\n);\n\nexport default Loading;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AlbumCover from './components/AlbumCover';\nimport { Loading } from '../../components/Loading';\nimport { Row } from 'react-bootstrap';\n\nconst AlbumsPage = ({ match }) => {\n  const albums = useSelector((state) => state.albums);\n  if (!albums) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <h2>Albums</h2>\n      <Row>{albums.data && albums.data.map((album) => <AlbumCover key={album.id} album={album} match={match} />)}</Row>\n    </div>\n  );\n};\n\nexport default AlbumsPage;\n","export const GET_ALBUM = '[Albums] get album by id';\nexport const SET_ALBUM = '[Albums] set album';\nexport const SET_ALBUMS = '[Albums] set albums';\nexport const GET_ALBUMS = '[Albums] get albums';\n\nexport function setAlbums(albums) {\n  return {\n    type: SET_ALBUMS,\n    albums,\n  };\n}\nexport function getAlbums() {\n  return {\n    type: GET_ALBUMS,\n  };\n}\nexport function setAlbum(album) {\n  return {\n    type: SET_ALBUM,\n    album,\n  };\n}\nexport function getAlbum(albumId) {\n  return {\n    type: GET_ALBUM,\n    albumId,\n  };\n}\n\nconst initialStateAlbums = {\n  data: [],\n  total: 0,\n};\n\nexport function albumsReducer(state = initialStateAlbums, action) {\n  switch (action.type) {\n    case SET_ALBUMS:\n      return {\n        ...state,\n        ...action.albums,\n      };\n    case SET_ALBUM:\n      return {\n        ...state,\n        album: action.album,\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../../redux/ducks/artistsDucks';\nimport { useDispatch } from 'react-redux';\nimport { Col, Image } from 'react-bootstrap';\n\nconst ArtistCover = ({ artist }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Col key={artist.id}>\n      <Link to={`/artists/${artist.id}`} onClick={() => dispatch(selectArtist(artist))}>\n        <Image src={artist.picture_medium} height={250} width={250} />\n      </Link>\n      <dl>\n        <dt>Artista</dt>\n        <dd>\n          <Link to={`/artists/${artist.id}`} onClick={() => dispatch(selectArtist(artist))}>\n            {artist.name}\n          </Link>\n        </dd>\n      </dl>\n    </Col>\n  );\n};\n\nexport default ArtistCover;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbum } from '../../redux/ducks/albumsDucks';\nimport { useParams } from 'react-router';\nimport { TracksList } from '../../components/Track';\nimport { Loading } from '../../components/Loading';\nimport { Row } from 'react-bootstrap';\nimport AlbumCover from './components/AlbumCover';\nimport ArtistCover from '../ArtistsPage/components/ArtistCover';\n\nconst AlbumDetailPage = ({ match }) => {\n  const dispatch = useDispatch();\n  const { albumId } = useParams();\n  const album = useSelector((state) => state.albums.album);\n\n  useEffect(() => {\n    dispatch(getAlbum(albumId));\n  }, [dispatch, albumId]);\n\n  if (!album) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <Row>\n        <AlbumCover album={album} match={match} showArtist={false} />\n        <ArtistCover artist={album.artist} />\n      </Row>\n      <TracksList tracks={album.tracks.data} />\n    </div>\n  );\n};\n\nexport default AlbumDetailPage;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectArtist } from '../../redux/ducks/artistsDucks';\nimport { Col, Container, Image, Row } from 'react-bootstrap';\nimport { Loading } from '../../components/Loading';\nimport ArtistCover from './components/ArtistCover';\n\nconst ArtistsPage = () => {\n  const artists = useSelector((state) => state.artists);\n  const dispatch = useDispatch();\n\n  if (!artists) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <h2>Artistas</h2>\n      <Row>{artists.data && artists.data.map((artist) => <ArtistCover key={artist.id} artist={artist} />)}</Row>\n    </div>\n  );\n};\n\nexport default ArtistsPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { TracksList } from '../../components/Track';\nimport { getArtist } from '../../redux/ducks/artistsDucks';\nimport { Loading } from '../../components/Loading';\nimport { Image } from 'react-bootstrap';\nimport ArtistCover from './components/ArtistCover';\n\nconst ArtistsDetailPage = ({ match }) => {\n  const dispatch = useDispatch();\n  const { artistId } = useParams();\n  const artist = useSelector((state) => state.artists.selected);\n\n  useEffect(() => {\n    dispatch(getArtist(artistId));\n  }, [dispatch, artistId]);\n\n  if (!artist) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <ArtistCover key={artist.id} artist={artist} />\n      {artist.tracks ? <TracksList tracks={artist.tracks.data} /> : <Loading />}\n    </>\n  );\n};\n\nexport default ArtistsDetailPage;\n","import React from 'react';\n/*\nimport { useSelector } from 'react-redux';\n*/\n\nconst GenresDetailPage = () => {\n  /*const playlist = useSelector((state) => state.playlist);*/\n\n  return (\n    <div>\n      <h2>Generos</h2>\n      {/*{playlist && playlist.data &&\n      playlist.data.map((album) => (\n        <div key={album.id}>\n          {album.title}\n        </div>\n      ))}*/}\n    </div>\n  );\n};\n\nexport default GenresDetailPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotFoundPage from '../pages/NotFoundPage';\nimport HomePage from '../pages/HomePage';\nimport { AlbumDetailPage, AlbumsPage } from '../pages/AlbumsPage';\nimport { ArtistsDetailPage, ArtistsPage } from '../pages/ArtistsPage';\nimport GenresDetailPage from '../pages/GenresPage';\nimport { useDispatch } from 'react-redux';\nimport { getAlbums } from '../redux/ducks/albumsDucks';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAlbums());\n  }, [dispatch]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/albums\" component={AlbumsPage} />\n      <Route exact path=\"/albums/:albumId\" component={AlbumDetailPage} />\n      <Route exact path=\"/artists\" component={ArtistsPage} />\n      <Route exact path=\"/artists/:artistId\" component={ArtistsDetailPage} />\n      <Route exact path=\"/genres/:genreId\" component={GenresDetailPage} />\n      <Route exact component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import { combineReducers } from 'redux';\nimport { playerReducer } from './ducks/playerDucks';\nimport { albumsReducer } from './ducks/albumsDucks';\nimport { artistsReducer } from './ducks/artistsDucks';\n\nconst rootReducer = combineReducers({\n  albums: albumsReducer,\n  players: playerReducer,\n  artists: artistsReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from './rootReducer';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const generateStore = () => {\n  const loggerMiddleware = createLogger();\n  const sagaMiddleware = createSagaMiddleware();\n\n  return {\n    ...createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware, sagaMiddleware))),\n    runSaga: sagaMiddleware.run,\n  };\n};\n","import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport { GET_ALBUM, GET_ALBUMS, setAlbum, setAlbums } from '../ducks/albumsDucks';\nimport { setArtists } from '../ducks/artistsDucks';\n\nfunction albums() {\n  return fetch('https://cors-anywhere.herokuapp.com/https://api.deezer.com/chart/top?limit=50').then((response) =>\n    response.json()\n  );\n}\nfunction album(albumId) {\n  return fetch(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${albumId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function* getAlbums() {\n  try {\n    const data = yield call(albums);\n    yield put(setAlbums(data.albums));\n    yield put(setArtists(data.artists));\n  } catch (e) {\n    yield put(setAlbums(e));\n  }\n}\n\nexport function* getAlbum({ albumId }) {\n  try {\n    const data = yield call(album, albumId);\n    yield put(setAlbum(data));\n  } catch (e) {\n    yield put(setAlbums(e));\n  }\n}\n\nexport default function* getAsyncAlbums() {\n  try {\n    yield all([yield takeLatest(GET_ALBUMS, getAlbums), yield takeLatest(GET_ALBUM, getAlbum)]);\n  } catch (e) {}\n}\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { GET_ARTIST_TRACKS, setTracks } from '../ducks/artistsDucks';\n\nfunction fetchArtist(artistId) {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/https://api.deezer.com/artist/${artistId}/top?limit=50`\n  ).then((response) => response.json());\n}\n\nexport function* getArtist({ artistId }) {\n  try {\n    const data = yield call(fetchArtist, artistId);\n    yield put(setTracks(data));\n  } catch (e) {\n    yield put(setTracks(e));\n  }\n}\n\nexport default function* getAsyncArtists() {\n  yield takeLatest(GET_ARTIST_TRACKS, getArtist);\n}\n","import { fork } from '@redux-saga/core/effects';\nimport getAsyncAlbums from './sagas/albumsSaga';\nimport getAsyncArtists from './sagas/artistsSaga';\n\nexport default function* rootSaga() {\n  yield fork(getAsyncAlbums);\n  yield fork(getAsyncArtists);\n}\n","import React from 'react';\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\n\nconst Header = () => (\n  <header data-testid=\"header\">\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"#home\" className=\"mr-auto\">\n        Unofficial Deezer\n      </Navbar.Brand>\n      {/*<Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-primary\">Search</Button>\n      </Form>*/}\n    </Navbar>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  &.active {\n    color: black;\n  }\n`;\n\nconst Browse = () => (\n  <Nav defaultActiveKey=\"/\" className=\"flex-column\">\n    <Nav.Link as={StyledNavLink} to=\"/\" exact>\n      Home\n    </Nav.Link>\n    <Nav.Link as={StyledNavLink} to=\"/albums\" exact>\n      Albums\n    </Nav.Link>\n    <Nav.Link as={StyledNavLink} to=\"/artists\" exact>\n      Artistas\n    </Nav.Link>\n  </Nav>\n);\n\nexport default Browse;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { setPlaylist } from '../../../redux/ducks/playerDucks';\n\nconst Sidebar = () => {\n  const queue = useSelector((state) => state.players.tracks);\n  const currentTrack = useSelector((state) => state.players.current);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {queue.map((track, index) => {\n        return (\n          <div key={track.id}>\n            {currentTrack && currentTrack.id === track.id ? (\n              <span className=\"text-black-50\">{track.title}</span>\n            ) : (\n              <Button\n                variant=\"outline-success\"\n                onClick={() => dispatch(setPlaylist({ track: { ...track, index }, tracks: queue }))}\n              >\n                {track.title}\n              </Button>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Browse from './components/Browse';\nimport Queue from './components/Queue';\n\nconst Sidebar = () => {\n  const [tabActive, setTabActive] = useState('browse');\n\n  return (\n    <aside data-testid=\"sidebar\">\n      <Button variant=\"secondary\" onClick={() => setTabActive('browse')}>\n        Browse\n      </Button>\n      <Button variant=\"secondary\" onClick={() => setTabActive('queue')}>\n        Queue\n      </Button>\n      {tabActive === 'browse' && <Browse />}\n      {tabActive === 'queue' && <Queue />}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nextTrack } from '../../redux/ducks/playerDucks';\n\nconst MainPlayer = () => {\n  const current = useSelector((state) => state.players.current);\n  const audioRef = useRef();\n  const dispatch = useDispatch();\n\n  if (audioRef.current) {\n    audioRef.current.pause();\n    audioRef.current.load();\n  }\n  return (\n    <footer data-testid=\"player\" className=\"fixed-bottom\">\n      Main player\n      {current && (\n        <audio controls ref={audioRef} autoPlay onEnded={() => dispatch(nextTrack())}>\n          <source src={current.preview} type=\"audio/mpeg\" />\n          <source src={current.preview} type=\"audio/mpeg\" />\n          <source src={current.preview} type=\"audio/mpeg\" />\n          <source src={current.preview} type=\"audio/mpeg\" />\n          <source src={current.preview} type=\"audio/mpeg\" />\n          Your browser does not support the audio element.\n        </audio>\n      )}\n    </footer>\n  );\n};\n\nexport default MainPlayer;\n","import './App.css';\nimport AppRouter from './routers/AppRouter';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { generateStore } from './redux/rootStore';\nimport rootSaga from './redux/rootSagas';\nimport Header from './components/Header/Header';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Sidebar from './components/Sidebar';\nimport MainPlayer from './components/MainPlayer';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  const store = generateStore();\n\n  store.runSaga(rootSaga);\n\n  return (\n    <Provider store={store}>\n      <Router basename=\"unofficial-deezer\">\n        <Header />\n        <Container fluid>\n          <Row>\n            <Col xs={3}>\n              <Sidebar />\n            </Col>\n            <Col>\n              <AppRouter />\n            </Col>\n          </Row>\n          <Row>\n            <MainPlayer />\n          </Row>\n        </Container>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}